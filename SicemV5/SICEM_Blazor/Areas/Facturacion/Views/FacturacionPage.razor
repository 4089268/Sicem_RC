@page "/Facturacion"
@namespace SICEM_Blazor.Facturacion.Views
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Charts
@using SICEM_Blazor.Facturacion.Models
@using SICEM_Blazor.Areas.Facturacion.Views

<div class="layout-page1">

    <div class="title-page" style="grid-area:1/1/2/2;">FACTURACIÃ“N</div>

    <div class="border rounded bg-white px-2 d-flex align-items-center" style="grid-area:2/1/3/2;">
        <SeleccionarFecha fecha1="@Fecha1" fecha2="@Fecha2" ProcesarParam="@Procesar" MostrarPeriodos="false" />
    </div>

    @* ****** Acciones ****** *@
    <div class="border rounded bg-white d-flex align-items-center" style="grid-area:3/1/4/2;">
        <MatButton Class="mx-2" style="min-width: 130px;" Raised="true" @onclick="ExportarExcel_Click">Exportar Excel</MatButton>
        <MatButton Class="mx-2" style="min-width: 130px;" Raised="true" Disabled="true">Generar Reporte</MatButton>
    </div>

    @* ****** DataGrid ****** *@
    <div class="border rounded bg-white p-2 d-flex" style="grid-area:4/1/5/2;">
        <SfGrid @ref="DataGrid" DataSource="@DatosFacturacion" TValue="Facturacion_Oficina" AllowResizing="true" AllowSorting="true" AllowFiltering="false"
                AllowExcelExport="true" AllowPdfExport="true" Height="100%" Width="100%" EnableHover="true">
            <GridColumns>
                <GridColumn HeaderText="" TextAlign="TextAlign.Center" Width="40">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            if(data.Id_Oficina > 0 && data.Id_Oficina < 999) {
                                @switch (data.Estatus) {
                                    case 1:
                                        <i class="fas fa-check-circle" style="color:green; font-size:1.5rem;"></i>
                                        break;
                                    case 2:
                                        <i class="fas fa-exclamation-circle" style="color:red; font-size:1.5rem;"></i>
                                        break;
                                    default:
                                        <div class="spinner-border p-2" role="status"> </div>
                                        break;
                                }
                            }
                        }
                    </Template>
                </GridColumn>

                <GridColumn Field="@nameof(Facturacion_Oficina.Oficina)" HeaderText="Oficina" TextAlign="TextAlign.Left" Width="170" />
                <GridColumn HeaderText="Domestico" TextAlign="TextAlign.Center" Width="110">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            <div class="fact-item">
                                <div class="usu">@data.Domestico_Usu.ToString("n0")</div>
                                <div class="fac">@data.Domestico_Fact.ToString("c2")</div>
                            </div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Comercial" TextAlign="TextAlign.Center" Width="110">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            <div class="fact-item">
                                <div class="usu">@data.Comercial_Usu.ToString("n0")</div>
                                <div class="fac">@data.Comercial_Fact.ToString("c2")</div>
                            </div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Industrial" TextAlign="TextAlign.Center" Width="110">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            <div class="fact-item">
                                <div class="usu">@data.Industrial_Usu.ToString("n0")</div>
                                <div class="fac">@data.Industrial_Fact.ToString("c2")</div>
                            </div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Serv. Gen." TextAlign="TextAlign.Center" Width="110">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            <div class="fact-item">
                                <div class="usu">@data.ServGener_Usu.ToString("n0")</div>
                                <div class="fac">@data.ServGener_Fact.ToString("c2")</div>
                            </div>
                        }
                    </Template>
                </GridColumn>

                <GridColumn Field="@nameof(Facturacion_Oficina.Domestico_Usu)" HeaderText="Usu Domestico" TextAlign="TextAlign.Center" Width="115" Format="n0" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.Domestico_Fact)" HeaderText="Fact Domestico" TextAlign="TextAlign.Right" Width="115" Format="c2" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.Comercial_Usu)" HeaderText="Usu Comercial" TextAlign="TextAlign.Center" Width="115" Format="n0" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.Comercial_Fact)" HeaderText="Fact Comercial" TextAlign="TextAlign.Right" Width="115" Format="c2" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.Industrial_Usu)" HeaderText="Usu Industrial" TextAlign="TextAlign.Center" Width="115" Format="n0" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.Industrial_Fact)" HeaderText="Fact Industrial" TextAlign="TextAlign.Right" Width="115" Format="c2" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.ServGener_Usu)" HeaderText="Usu Serv Gen" TextAlign="TextAlign.Center" Width="115" Format="n0" Visible="false"/>
                <GridColumn Field="@nameof(Facturacion_Oficina.ServGener_Fact)" HeaderText="Fact Serv Gen" TextAlign="TextAlign.Right" Width="115" Format="c2" Visible="false" />

                <GridColumn Field="@nameof(Facturacion_Oficina.Subtotal)" HeaderText="Subtotal" TextAlign="TextAlign.Right" Width="120" Format="c2" />
                <GridColumn Field="@nameof(Facturacion_Oficina.Iva)" HeaderText="IVA" TextAlign="TextAlign.Right" Width="120" Format="c2" />
                <GridColumn Field="@nameof(Facturacion_Oficina.Total)" HeaderText="Total" TextAlign="TextAlign.Right" Width="120" Format="c2" />
                <GridColumn Field="@nameof(Facturacion_Oficina.Usuarios)" HeaderText="Usuarios" TextAlign="TextAlign.Center" Width="120" Format="n0" />

                <GridColumn HeaderText="Acciones" TextAlign="TextAlign.Left" Width="240">
                    <Template>
                        @{
                            var data = (context as Facturacion_Oficina);
                            if(data.Id_Oficina > 0 && data.Id_Oficina < 999) {
                                <div class="d-flex p-1">
                                    <button type="button" class="btn btn-primary btn-sm mx-1" data-toggle="tooltip" data-placement="top" title="Facturacion Por Conceptos" disabled="@(data.Estatus != 1 )" @onclick=@( e => FacturacionConceptos_Click(data) ) >
                                        <i class="fa fa-tag" aria-hidden="true"></i>
                                    </button>
                                    <button type="button" class="btn btn-primary btn-sm mx-1" data-toggle="tooltip" data-placement="top" title="Facturacion Anual" disabled="@(data.Estatus != 1 )" @onclick=@( e => FacturacionAnual_Click(data) ) >
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                    </button>
                                    <button type="button" class="btn btn-primary btn-sm mx-1" data-toggle="tooltip" data-placement="top" title="Facturacion Por Localidades" disabled="@(data.Estatus != 1 )" @onclick=@( e => FacturacionLocalidades_Click(data) ) >
                                        <i class="fa fa-building" aria-hidden="true"></i>
                                    </button>
                                </div>
                            }
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </div>

    <!--- ****** Graficas ****** -->
    <div class="d-flex" style="grid-area:5/1/6/2;">
        <div class="border rounded bg-white mr-1 d-flex flex-column align-items-center" style="width:100%; height:100%;">
            <SfChart @ref="GraficaFacturacion" Title="TARIFAS FACTURADAS">
                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
                <ChartPrimaryYAxis Visible="false" LabelFormat="c2" />
                <ChartTooltipSettings Enable="true" Header="Usuarios" Format="<b>${series.name}</b> : ${point.y}" Shared="true"></ChartTooltipSettings>
                <ChartLegendSettings Position="LegendPosition.Right" />
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@DatosGrafica" Name="Domestico" XName="Descripcion" YName="Valor1" Type="ChartSeriesType.StackingBar">
                        <ChartMarker>
                            <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Outer" />
                        </ChartMarker>
                    </ChartSeries>
                    <ChartSeries DataSource="@DatosGrafica" Name="Comercial" XName="Descripcion" YName="Valor3" Type="ChartSeriesType.StackingBar">
                        <ChartMarker>
                            <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Outer" />
                        </ChartMarker>
                    </ChartSeries>
                    <ChartSeries DataSource="@DatosGrafica" Name="Industrial" XName="Descripcion" YName="Valor4" Type="ChartSeriesType.StackingBar">
                        <ChartMarker>
                            <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Outer" />
                        </ChartMarker>
                    </ChartSeries>
                    <ChartSeries DataSource="@DatosGrafica" Name="Serv. Gen." XName="Descripcion" YName="Valor5" Type="ChartSeriesType.StackingBar">
                        <ChartMarker>
                            <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Outer" />
                        </ChartMarker>
                    </ChartSeries>
                </ChartSeriesCollection>
            </SfChart>
        </div>
    </div>

</div>

<style type="text/css">
    .fact-item{
        display:flex;
        flex-flow:column;
        align-items:center;
        justify-content:space-around;
        height:3rem;
    }
    .fact-item .usu, .fact-item .fac{
        text-align:center;
        font-size:1rem;
        height:2rem;
    }
</style>


@* ****** Dialogos y ventanas secundarias ****** *@
<BusyIndicator Busy="@busyDialog" ContentText="Cargando datos...." />
<Facturacion_ConceptosVtn @ref="FacturacionConceptos" Visible="@facturacionConceptos_Visible" CerrarModal="@( e => facturacionConceptos_Visible = false )" Fecha="@Fecha1" Subsistema="@Subsistema" Sector="@Sector" />
<Facturacion_AnualVtn @ref="FacturacionAnualVtn" Visible="@FacturacionAnual_Visible" AnoFacturacion="@Fecha1.Year" Subsistema="@Subsistema" Sector="@Sector" OnClose="@( e => FacturacionAnual_Visible = false)"/>
<Facturacion_LocalidadesVtn @ref="FacturacionLocalidadesVtn" Fecha="@Fecha1" Subsistema="@Subsistema" Sector="@Sector" Visible="@FacturacionLocalidad_Visible" OnClose="@( e => FacturacionLocalidad_Visible = false)" />