@using Syncfusion.Blazor.Grids
@using SICEM_Blazor.Recaudacion.Data
@using SICEM_Blazor.Recaudacion.Models
@inject NavigationManager NavManager
@inject SicemService sicemService
@inject IRecaudacionService recaudacionService
@inject IJSRuntime JSRuntime
@inject IMatToaster Toaster

    @if(Visible){
    <VentanaSecundaria Titulo="@Titulo" CerrarVentana="@Cerrar_Modal" Filas="@FilasGrid" Columnas="@ColumnasGrid">
        <Content>

            <div class="m-1 p-2 border rounded bg-white" style="grid-row: 1/2; grid-column: 1/2;">
                <div class="w-100 d-flex align-items-center">
                    <MatButton Class="mr-2" Raised="true" Style="height:2.4rem;" OnClick="@GenerarExcel">Exportar Excel <i class="fa fa-file-excel-o ml-2" aria-hidden="true"></i> </MatButton>
                </div>
            </div>

            <div class="m-1 p-2 border rounded bg-white" style="grid-row: 2/3; grid-column: 1/2;">
                <div class="w-100 h-100">
                    <SfGrid @ref="DataGrid" DataSource="@DatosGrid" AllowGrouping="true" AllowSorting="false" AllowResizing="true" AllowFiltering="false" AllowExcelExport="true" AllowPdfExport="true" Height="100%" Width="auto" EnableHover="true" RowHeight="22">
                        <GridGroupSettings Columns="@(new string[] { "TipoConcepto"})" ShowDropArea="false">
                            <CaptionTemplate>
                                @{
                                    var order = (context as CaptionTemplateContext);
                                    if(order.Key.Contains("--*--")){
                                        <div class="pt-4 pb-3">TOTAL</div>
                                    }else{
                                        <div class="pt-4 pb-3">@order.Key - @order.Count.ToString("n0") Conceptos</div>
                                    }
                                }
                            </CaptionTemplate>
                        </GridGroupSettings>
                        <GridColumns>
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.TipoConcepto)" HeaderText="Tipo Concepto" TextAlign="TextAlign.Left" Width="90" Visible="false" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.Descripcion)" HeaderText="Concepto" TextAlign="TextAlign.Left" Width="220" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.DomesticoSubTot)" HeaderText="Dom SubTotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.DomesticoIVA)" HeaderText="Dom IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.DomesticoTotal)" HeaderText="Dom Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.DomesticoUsu)" HeaderText="Dom Usrs" TextAlign="TextAlign.Center" Width="100" Format="n0" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.HoteleroSubTot)" HeaderText="Hot SubTotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.HoteleroIVA)" HeaderText="Hot IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.HoteleroTotal)" HeaderText="Hot Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.HoteleroUsu)" HeaderText="Hot Usrs" TextAlign="TextAlign.Center" Width="100" Format="n0" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.ComercialSubTot)" HeaderText="Com SubTotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.ComercialIVA)" HeaderText="Com IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.ComercialTotal)" HeaderText="Com Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.ComercialUsu)" HeaderText="Com Usrs" TextAlign="TextAlign.Center" Width="100" Format="n0" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.IndustrialSubTot)" HeaderText="Ind SubTotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.IndustrialIVA)" HeaderText="Ind IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.IndustrialTotal)" HeaderText="Ind Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.IndustrialUsu)" HeaderText="Ind Usrs" TextAlign="TextAlign.Center" Width="100" Format="n0" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.GeneralSubTot)" HeaderText="Serv SubTotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.GeneralIVA)" HeaderText="Serv IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.GeneralTotal)" HeaderText="Serv Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.GeneralUsu)" HeaderText="Serv Usrs" TextAlign="TextAlign.Center" Width="100" Format="n0" />

                            <GridColumn Field="@nameof(ConceptoTipoUsuario.Subtotal)" HeaderText="Subtotal" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.IVA)" HeaderText="IVA" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.Total)" HeaderText="Total" TextAlign="TextAlign.Right" Width="90" Format="c2" />
                            
                            <GridColumn Field="@nameof(ConceptoTipoUsuario.Usuarios)" HeaderText="Usuarios" TextAlign="TextAlign.Center" Width="110" Format="n0" />
                            
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>

        </Content>
    </VentanaSecundaria>
    }

    <BusyIndicator Busy="@busyDialog" ContentText="Cargando datos...." />

@code {

    [Parameter] public EventCallback CerrarModal { get; set; }
    [Parameter] public DateTime Fecha1 { get; set; }
    [Parameter] public DateTime Fecha2 { get; set; }
    [Parameter] public int Subsistema { get; set; }
    [Parameter] public int Sector { get; set; }
    [Parameter] public bool Visible {get;set;} = false;
    public IEnlace Enlace { get; set; }
    public string Titulo {get;set;} = "RECAUDACION POR CONCEPTOS Y TIPOS DE USUARIO";
    
    private SfGrid<ConceptoTipoUsuario> DataGrid {get;set;}

    private List<ConceptoTipoUsuario> DatosGrid { get; set; }
    
    private double[] FilasGrid = new double[]{ 50, .8};
    private double[] ColumnasGrid = new double[]{.85};


    private bool busyDialog = false;
    

    //******** Funciones Generales ********
    public void Inicializar(IEnlace enlace, IEnumerable<ConceptoTipoUsuario> datos) {
        this.Enlace = enlace;
        this.Titulo = $"{Enlace.Nombre} - RECAUDACION POR CONCEPTOS Y TIPOS DE USUARIO DEL {this.Fecha1.ToString("dd/MM/yyyy")} AL {this.Fecha2.ToString("dd/MM/yyyy")} ";
        this.DatosGrid = datos.OrderBy(item => item.Id_Tipo).OrderBy(item => item.EsRezago).OrderBy(item => item.Id_Concepto).ToList();
    }
    private async Task Cerrar_Modal() {
        this.DatosGrid.Clear();
        await CerrarModal.InvokeAsync("");
    }
    private async Task GenerarExcel() {
        //await DataGrid.ClearGroupingAsync();
        //await Task.Delay(100);

        await this.DataGrid.ExcelExport(new ExcelExportProperties {
            //IncludeHiddenColumn = true,
            FileName = string.Format("sicem_ingresosPorConceptosyUsuarios_{0}.xlsx", Guid.NewGuid().ToString().Replace("-", ""))
        });
        //await DataGrid.GroupColumnAsync("TipoConcepto");
        //await Task.Delay(100);

    }

}