@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using SICEM_Blazor.Recaudacion.Models
@using SICEM_Blazor.Recaudacion.Data
@inject IRecaudacionService recaudacionService
@inject IJSRuntime JSRuntime

@if(Visible){
    <VentanaSecundaria Titulo="@Titulo2" CerrarVentana="@CerrarVentana" Filas="@Filas" Columnas="@Columnas">
        <Content>

            <div class="m-1 p-2 border rounded bg-white" style="grid-row: 1/2; grid-column: 1/2;">
                <div class="w-100 d-flex align-items-center">
                    <MatButton Class="mr-2" Raised="true" Style="height:2.5rem;" @onclick="@GenerarExcel">Exportar Excel <i class="fa fa-file-excel-o ml-2" aria-hidden="true"></i> </MatButton>

                    @* <div class="d-flex align-items-center jusitfy-content-center ml-auto pr-2">
                        <label class="px-3" style="font-size:1.2rem;">LOCALIDAD:</label>
                        <ComboBox Width="220" InitValue="0" Options="@CatLocalidades" OnSelected="@ComboLocalidad_Selected" />
                    </div> *@

                </div>
            </div>

            <div class="m-1 p-2 border rounded bg-white" style="grid-row: 2/3; grid-column: 1/2;">
                <SfGrid @ref="dataGrid" DataSource="@datosGrid" TValue="IngresoConceptoTarifa" AllowResizing="true" AllowSorting="true" AllowFiltering="false" AllowExcelExport="true" Height="100%" Width="100%" EnableHover="true">
                    <GridColumns>
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.IdConcepto)" HeaderText="Id Concepto" TextAlign="TextAlign.Center" Width="60" Visible="false" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Concepto)" HeaderText="Concepto" TextAlign="TextAlign.Left" Width="180" />

                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Domestico_Usu)" Visible="false" HeaderText="Domestico Usuarios." TextAlign="TextAlign.Right" Width="100" Format="n0" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Domestico_Total)" Visible="false" HeaderText="Domestico Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                        
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Comercial_Usu)" Visible="false" HeaderText="Comercial Usuarios" TextAlign="TextAlign.Right" Width="100" Format="n0" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Comercial_Total)" Visible="false" HeaderText="Comercial Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                                                
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Industrial_Usu)" Visible="false" HeaderText="Industrial Usuarios" TextAlign="TextAlign.Right" Width="100" Format="n0" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Industrial_Total)" Visible="false" HeaderText="Industrial Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                        
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Publico_Usu)" Visible="false" HeaderText="Publico Usuarios" TextAlign="TextAlign.Right" Width="100" Format="n0" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Publico_Total)" Visible="false" HeaderText="Publico Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                        
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Subtotal)" Visible="false" HeaderText="Subtotal" TextAlign="TextAlign.Right" Width="100" Format="c2" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Iva)"    Visible="false" HeaderText="IVA" TextAlign="TextAlign.Right" Width="90" Format="c2" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Total)" Visible="false" HeaderText="Total" TextAlign="TextAlign.Right" Width="110" Format="c2" />
                        <GridColumn Field="@nameof(IngresoConceptoTarifa.Usuarios)" Visible="false" HeaderText="Usuarios" TextAlign="TextAlign.Right" Width="110" Format="n0" />

                        <GridColumn HeaderText="Total" TextAlign="TextAlign.Center" Width="210">
                            <HeaderTemplate>
                                <div class="colorT6" style="grid-area: 1/1/2/4;">Total</div>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var data = (context as IngresoConceptoTarifa);
                                    string _classInfo = "";
                                    switch (data.IdConcepto)
                                    {
                                        case 997:
                                            _classInfo = "infoRow1";
                                            break;
                                        case 998:
                                            _classInfo = "infoRow2";
                                            break;
                                        case 999:
                                            _classInfo = "infoRow3";
                                            break;
                                    }
                                    <div class="customCol @_classInfo ">
                                        <div class="item colorT6">@(data.IdConcepto > 996?data.Subtotal.ToString("n0"):data.Subtotal.ToString("c2"))</div>
                                        <div class="item colorT6">@(data.IdConcepto > 996?data.Iva.ToString("n0"):data.Iva.ToString("c2"))</div>
                                        <div class="item colorT6">@(data.IdConcepto > 996?data.Total.ToString("n0"):data.Total.ToString("c2"))</div>
                                    </div>
                                }
                            </Template>
                        </GridColumn>

                        <GridColumn HeaderText="Domesticos" TextAlign="TextAlign.Center" Width="210">
                            <HeaderTemplate>
                                <div class="colorT1" style="grid-area: 1/1/2/4;">Domesticos</div>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var data = (context as IngresoConceptoTarifa);
                                    <div class="customCol">
                                        <div class="item colorT1">@data.Domestico_Usu.ToString("n0")</div>
                                        <div class="item colorT1">@data.Domestico_Total.ToString("c2")</div>
                                    </div>
                                }
                            </Template>
                        </GridColumn>

                        <GridColumn HeaderText="Hotelero" TextAlign="TextAlign.Center" Width="210">
                            <HeaderTemplate>
                                <div class="colorT2" style="grid-area: 1/1/2/4;">Comercial</div>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var data = (context as IngresoConceptoTarifa);
                                    <div class="customCol">
                                        <div class="item colorT2">@data.Comercial_Usu.ToString("n0")</div>
                                        <div class="item colorT2">@data.Comercial_Total.ToString("c2")</div>
                                    </div>
                                }
                            </Template>
                        </GridColumn>

                        <GridColumn HeaderText="Industrial" TextAlign="TextAlign.Center" Width="210"> 
                            <HeaderTemplate>
                                <div class="colorT4" style="grid-area: 1/1/2/4;">Industrial</div>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var data = (context as IngresoConceptoTarifa);
                                    <div class="customCol">
                                        <div class="item colorT4">@data.Industrial_Usu.ToString("n0")</div>
                                        <div class="item colorT4">@data.Industrial_Total.ToString("c2")</div>
                                    </div>
                                }
                            </Template>
                        </GridColumn>

                        <GridColumn HeaderText="Publico" TextAlign="TextAlign.Center" Width="210">
                            <HeaderTemplate>
                                <div class="colorT5" style="grid-area: 1/1/2/4;">Publico</div>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var data = (context as IngresoConceptoTarifa);
                                    <div class="customCol">
                                        <div class="item colorT5">@data.Publico_Usu.ToString("n0")</div>
                                        <div class="item colorT5">@data.Publico_Total.ToString("c2")</div>
                                    </div>
                                }
                            </Template>
                        </GridColumn>

                    </GridColumns>
                </SfGrid>
            </div>

        </Content>
    </VentanaSecundaria>
}

<style>
    .customCol{
        display:flex;
        align-items:center;
        justify-content:space-around;
    }
        .customCol .item{
            font-size:.9rem;
            font-weight:600;
            text-align:right;
            width:33%;
        }

        .colorT1{
            color:#1976d2;
        }
        .colorT2{
            color:#00796b;
        }
        .colorT3{
            color:#b75005;
        }
        .colorT4{
            color:#00838f;
        }
        .colorT5{
            color:#c2185b;
        }
        .colorT6{
            color:#607d8b;
        }
    
    

</style>

<BusyIndicator Busy="@busyDialog" ContentText="Cargando datos...." />

@code {

    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback CerrarModal { get; set; }
    [Parameter] public DateTime FechaDesde {get;set;}
    [Parameter] public DateTime FechaHasta {get;set;}
    [Parameter] public int Subsistema {get;set;}
    [Parameter] public int Sector {get;set;}
    public string Titulo {get;set;} = "CONCEPTOS RECAUDADOS POR TARIFA";
    private string Titulo2 {
        get {
            if(idLocalidadSeleccionado > 0){
                return $"{oficinaActual.Nombre} - {Titulo} - {CatLocalidades[idLocalidadSeleccionado]}";
            }else{
                return $"{oficinaActual.Nombre} - {Titulo}";
            }
        }
    }

    private SfGrid<IngresoConceptoTarifa> dataGrid {get;set;}
    private IEnlace oficinaActual;
    private List<IngresoConceptoTarifa> datosGrid;
    private double[] Filas = new double[]{48,700};
    private double[] Columnas = new double[] {0.85};
    private bool busyDialog = false;
    private Dictionary<int, string> CatLocalidades = new Dictionary<int, string>();
    private int idLocalidadSeleccionado = 0;
    

    public void Inicializar(IEnlace oficina, IEnumerable<IngresoConceptoTarifa> datos, Dictionary<int,string> catLocal){
        this.CatLocalidades = catLocal;
        this.oficinaActual = oficina;
        this.datosGrid = datos.ToList();
    }

    private async Task GenerarExcel()
    {
        var _name = $"{Titulo2.Replace(" ","_")}-{Guid.NewGuid().ToString().Replace("-","")}.xlsx";

        var p = new ExcelExportProperties();
        p.IncludeHiddenColumn = true;
        p.FileName = _name;
        await this.dataGrid.ExcelExport(p);
    }

    private async Task CerrarVentana()
    {
        await CerrarModal.InvokeAsync("");
    }

    private async Task ComboLocalidad_Selected(int idLocalidad)
    {
        busyDialog = true;
        await Task.Delay(100);

        idLocalidadSeleccionado = idLocalidad;
        datosGrid = new List<IngresoConceptoTarifa>();
        StateHasChanged();
        datosGrid = recaudacionService.ObtenerIngresosPorConceptosTipoUsuarios(oficinaActual, this.FechaDesde, this.FechaHasta, this.Subsistema, this.Sector, idLocalidad).ToList();
        StateHasChanged();

        await Task.Delay(200);
        busyDialog = false;

    }

}