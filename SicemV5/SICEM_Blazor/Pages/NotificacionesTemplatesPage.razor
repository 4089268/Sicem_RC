@page "/NotificacionesTemplates"
@inject SicemService sicemService


<div class="notificacionesTemplateLayout">
    <div style="grid-area:1/1/2/3;">
        <div class="title-page text-uppercase" style="grid-area:1/1/2/2;">HISTORIAL DE MODIFICACIONES</div>
    </div>

    <nav aria-label="breadcrumb" style="grid-area:2/1/3/3;">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./">Inicio</a></li>
            <li class="breadcrumb-item"><a href="./Configuracion">Configuracion</a></li>
            <li class="breadcrumb-item active" aria-current="page">Notificaciones Templates</li>
        </ol>
    </nav>

    @* Area Opciones *@
    <div class="grid border rounded bg-white px-2 d-flex align-items-center" style="grid-area:3/1/4/3;">

        <div class="button px-3 py-2 bg-success mr-3" @onclick="AgregarNuevoTemplateClick" >
            <i class="fa fa-plus mr-2"></i>
            <span>Agregar Template</span>
        </div>
    </div>
    
    <!-- ****** Grid Catalogo Historial ******-->
    <div class="border rounded bg-white p-2" style="grid-area:4/1/5/2" >
        <div class="d-flex align-items-center p-1" style="height:4rem;">
            <div class="d-flex align-items-center border rounded p-2" style="width: 24rem; height:100%; font-size:1.1rem;">
                <i class="fa fa-search ml-2 mr-2" style="color:#555;"></i>
                <input type="text" placeholder="Buscar" @bind-value="searchText" @onkeyup="OnGridSearch_KeyUp" style="border: none; outline:none; background-color:#fff; width:100%; box-shadow:none;" />
                @if(searchText.Trim().Length > 1){
                    <i class="fa fa-close link-btn aling ali align-self-start m m-1" aria-hidden="true" style="width: 1rem;height: 1rem;color: #333;text-decoration: none !important;" @onclick="ClearSearch_Click"></i>
                }
            </div>
        </div>

        <div class="p-1" style="width: 100%; height: calc(100% - 4.5rem);">

            <SfGrid @ref="DataGrid" DataSource="@DatosGrid" TValue="NotificacionTemplate" AllowResizing="true" AllowSorting="true" AllowFiltering="false"
                AllowExcelExport="true" Height="100%" Width="100%" EnableHover="true">
                <GridEvents RowSelected="OnDataGrid_SelectionChanged" TValue="NotificacionTemplate"></GridEvents>
                <GridColumns>
                     <GridColumn Field=@nameof(NotificacionTemplate.Titulo) HeaderText="Titulo" TextAlign="TextAlign.Left" Width="140">
                        <Template>
                            @{
                                var data = (context as NotificacionTemplate);
                                <i class="fa fa-newspaper mr-2" />
                                <span>@data.Titulo</span>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>

        </div>

    </div>

    <!-- ****** Grid Detalle ******-->
    <div class="border rounded bg-white p-2" style="grid-area:4/2/5/3;">
        <div class="d-flex" style="width: 100%; height: calc(100% - 4.5rem);">

            <div class="area-texto d-inline-flex flex-column mr-2" style="width: calc(100% - 13rem); height:100%">
                @if( TemplateSeleccionado == null){
                    <SfTextBox Multiline=false Placeholder="Titulo" Readonly="true"></SfTextBox>
                    <div class="overflow-auto">
                        <SfTextBox Multiline=true Placeholder="Mensaje a notificar" Style="height:20rem;" Readonly="true"></SfTextBox>
                    </div>
                    
                }else{
                    <SfTextBox Multiline=false Placeholder="Titulo" @bind-Value="@TemplateSeleccionado.Titulo"></SfTextBox>
                    <div class="overflow-auto">
                        <SfTextBox Multiline=true Placeholder="Mensaje a notificar" Style="height:20rem;" @bind-Value="@TemplateSeleccionado.Texto"></SfTextBox>
                    </div>
                    
                }
            </div>
            <div class="list-props d-inline-flex flex-column p-2 overflow-auto" style="width:12rem;">
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Oficina"))">Id_Oficina</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Padron"))">Id_Padron</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Oficina"))">Oficina</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Cuenta"))">Id_Cuenta</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("NomComercial"))">NomComercial</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("NomPropietario"))">NomPropietario</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("RazonSocial"))">RazonSocial</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Rfc"))">Rfc</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Curp"))">Curp</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Direccion"))">Direccion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("IdLocalidad"))">IdLocalidad</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Poblacion"))">Poblacion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Colonia"))">Id_Colonia</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Colonia"))">Colonia</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Ciudad"))">Ciudad</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Estado"))">Estado</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("CodigoPostal"))">CodigoPostal</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Telefono1"))">Telefono1</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Telefono2"))">Telefono2</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ReciboMail"))">ReciboMail</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Email"))">Email</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("CallePpal"))">CallePpal</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("NumExt"))">NumExt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("NumInt"))">NumInt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("CalleLat1"))">CalleLat1</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("CalleLat2"))">CalleLat2</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Ruta"))">Ruta</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Sb"))">Sb</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Sector"))">Sector</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Manzana"))">Manzana</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Lote"))">Lote</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Nivel"))">Nivel</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Fraccion"))">Fraccion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Toma"))">Toma</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Localizacion"))">Localizacion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Giro"))">Id_Giro</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Giro"))">Giro</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Claseusuario"))">Id_Claseusuario</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Clase_Usuario"))">Clase_Usuario</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Estatus"))">Id_Estatus</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Estatus"))">Estatus</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Mf"))">Mf</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Af"))">Af</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("PromedioAnt"))">PromedioAnt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("PromedioAct"))">PromedioAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("MesAdeudoAnt"))">MesAdeudoAnt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("MesAdeudoAct"))">MesAdeudoAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Servicio"))">Id_Servicio</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Servicio"))">Servicio</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Tarifa"))">Id_Tarifa</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Tipo_Usuario"))">Tipo_Usuario</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_TarifaFija"))">Id_TarifaFija</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Tarifa_Fija"))">Tarifa_Fija</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ConsumoFijo"))">ConsumoFijo</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ImporteFijo"))">ImporteFijo</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ImporteFijoDren"))">ImporteFijoDren</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ImporteFijoSane"))">ImporteFijoSane</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Situacion"))">Id_Situacion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Situacion"))">Situacion</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_AnomaliaAct"))">Id_AnomaliaAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("AnomaliaAct"))">AnomaliaAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("LecturaAnt"))">LecturaAnt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("LecturaAct"))">LecturaAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ConsumoAnt"))">ConsumoAnt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("ConsumoAct"))">ConsumoAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Consumo_RealAnt"))">Consumo_RealAnt</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Consumo_RealAct"))">Consumo_RealAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Tipocalculo"))">Id_Tipocalculo</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Calculo"))">Calculo</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Calculo_Act"))">Calculo_Act</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Subtotal"))">Subtotal</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Iva"))">Iva</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Total"))">Total</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("EsMacromedidor"))">EsMacromedidor</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("EsDraef"))">EsDraef</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("EsAltoconsumidor"))">EsAltoconsumidor</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Id_Medidor"))">Id_Medidor</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Diametro"))">Diametro</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Tipotoma"))">Tipotoma</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("MesFacturado"))">MesFacturado</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("FechaAlta"))">FechaAlta</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("AltaFactura"))">AltaFactura</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("FechaLecturaAct"))">FechaLecturaAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("FechaFacturaAct"))">FechaFacturaAct</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("FechaVencimiento"))">FechaVencimiento</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Latitude"))">Latitude</div>
                <div class="button prop" @onclick="@(e=>OnProp_Click("Longitude"))">Longitude</div>     
            </div>
            
            
        </div>
        <div class="d-flex p-2 justify-content-center" style="height:4rem;">
            <div class="button px-3 py-2 bg-success mr-3" style="width:12rem;" @onclick="GuardarOCrear">
                <i class="fa fa-save mr-3"></i>
                <span>Actualizar</span>
            </div>
            <div class="button px-3 py-2 bg-primary mr-3" style="width:12rem;" @onclick="GuardarCopia">
                <i class="fa fa-save mr-3"></i>
                <span>Guardar Copia</span>
            </div>
        </div>
    </div>
    
</div>

<style>
    .list-props .prop{
        padding: 2px 4px;
        margin-bottom: 2px;
        background-color: #80acc9;
        border: 1px solid #6491af;
        border-radius: 4px;
    }
    .area-texto textarea{
        @* height: 100% !important;
        width: 100% !important; *@
        resize: none;
    }
</style>

<BusyIndicator Busy="@cargando" ContentText="Cargando datos..." />

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    private SfGrid<NotificacionTemplate> DataGrid {get;set;}    
    private List<NotificacionTemplate> DatosGrid {get;set;}
    private NotificacionTemplate TemplateSeleccionado {get;set;}

    
    private bool cargando = false;
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        await CargarTemplates();
    }

    private void OnDataGrid_SelectionChanged(RowSelectEventArgs<NotificacionTemplate> e){
        TemplateSeleccionado = e.Data;
    }

    private async Task OnGridSearch_KeyUp(KeyboardEventArgs e){
        if(e.Key == "Enter"){
            await DataGrid.SearchAsync(searchText);
        }
    }
    private async Task ClearSearch_Click(){
        this.searchText = "";
        await OnGridSearch_KeyUp(new KeyboardEventArgs(){Key = "Enter"});
    }

    private void OnProp_Click(string val){
        if(TemplateSeleccionado != null){
            TemplateSeleccionado.Texto = TemplateSeleccionado.Texto + @" ${" + val + "}";
        }
    }

    private async Task CargarTemplates(){
        this.cargando = true;
        await Task.Delay(100);

        TemplateSeleccionado = null;
        this.DatosGrid = sicemService.ObtenerTemplateNotificaciones().ToList();

        await Task.Delay(100);
        this.cargando = false;
    }
    private async Task GuardarOCrear(){

        if(this.TemplateSeleccionado == null){
            return;
        }

        this.cargando = true;
        await Task.Delay(100);

        // Guarar template en la base de datos
        var id = sicemService.ActualizarTemplateNotificaciones(this.TemplateSeleccionado);
        Console.WriteLine($"Template {id}, modificado");

        await CargarTemplates();
    }
    private async Task GuardarCopia(){

        if(this.TemplateSeleccionado == null){
            return;
        }

        this.cargando = true;
        await Task.Delay(100);

        var newTemplate = new NotificacionTemplate(){
            Titulo = TemplateSeleccionado.Titulo,
            Texto = TemplateSeleccionado.Texto,
            FCreacion = DateTime.Now,
            UltimaMod = DateTime.Now
        };

        // Guarar template en la base de datos
        var id = sicemService.ActualizarTemplateNotificaciones(newTemplate);
        Console.WriteLine($"Template {id}, modificado");

        await CargarTemplates();
    }
    private void AgregarNuevoTemplateClick(){
        this.TemplateSeleccionado = new NotificacionTemplate(){
            Titulo = "Nuevo Template",
            Texto = "Mensaje a notificar"
        };
    }
   
}